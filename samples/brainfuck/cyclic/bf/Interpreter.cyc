package bf;

import java.util.List;
import java.util.ArrayList;

public static single Interpreter{

    public void main(String[] args){
        val program = "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.";

        int ptr = 0;
        List cells = new ArrayList();
        for(int i = 0; i < 300; i++;)
            cells.add((Byte)0);

		char[] chars = program.toCharArray();
        for(int i = 0; i < chars.length; i++;){
            val instr = String.valueOf(chars[i]);

            if(">".equals(instr))
                ptr++;
            else if("<".equals(instr))
                ptr--;
            else if("+".equals(instr))
                cells.set(ptr, (byte)(((Byte)cells.get(ptr)) + 1));
            else if("-".equals(instr))
                cells.set(ptr, (byte)(((Byte)cells.get(ptr)) - 1));
            else if(".".equals(instr))
                System.out.print((char)(Byte)cells.get(ptr));
			else if("[".equals(instr)){
				byte value = (Byte)cells.get(ptr);
				if(value == 0){
					int opens = 0;
					while((opens > -1) && (i + 1 < chars.length)){
						i++;
						val nInstr = String.valueOf(chars[i]);
						if("[".equals(nInstr))
							opens++;
						else if("]".equals(nInstr))
							opens--;
					}
				}
			}else if("]".equals(instr)){
				byte value = (Byte)cells.get(ptr);
				if(value > 0){
					int closes = 0;
					while((closes > -1) && (i > 0)){
						i--;
						val nInstr = String.valueOf(chars[i]);
						if("[".equals(nInstr))
							closes--;
						else if("]".equals(nInstr))
							closes++;
					}
				}
			}
        }

		System.out.println();
		System.out.println(cells);
    }
}